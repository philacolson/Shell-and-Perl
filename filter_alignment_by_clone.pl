#! /usr/bin/perl
#
#
# this program takes as input the prt_chmap_id, look into the sample name and evaluate whether there are any clones.
## it also prints out an output with the following info:
## clone=xxx unique=xxx unique_strand=xxx (unique_strand==1 means forward only coverage; uqniue_strand==2 means reverse-only coverage; 3=f+r
## sample name looks ike that: HWUSI-EAS1680_8:2:94:14968:4816_145, HWUSI-EAS1680_8:2:94:14968:4816_-145. The last field separated by _ refers to the 
## clone info. So HWUSI-EAS1680_8:2:94:14968:4816_145->clone=HWUSI-EAS1680_8:2:94:14968:4816, forward (145 is plus); HWUSI-EAS1680_8:2:94:14968:4816_-145->HWUSI-EAS1680_8:2:94:14968:4816, reverse (-145 is reverse)

use Getopt::Std;
use Carp;
use File::Basename;
getopt('i:r:o');

my $USAGE="$0 takes the following arguement:\n";
$USAGE .="-i input file generated by prt_chmap_id \n";
$USAGE .="-r output file for reporting clone information and unique informatio\n";
$USAGE .="-o output file name for recording the uniqune alignments\n";



if(!defined $opt_i ){
  croak $USAGE;
}

if(!defined $opt_r ){
  croak $USAGE;
}

if(!defined $opt_o){
  croak $USAGE;
}

undef my %clone_info_list;

open(FN, $opt_i) or die "Can not open the file created by prt_chmap_id:$opt_i\n";
open (FO,"> $opt_o") or die "Can not open the output file $opt_o\n";
open (FR,"> $opt_r") or die "Can not open the output report file $opt_r\n";

while(<FN>)
{
  chomp;
  my $line=$_;
  my @items = split (/\t/, $_);
  my @t_items = split (/\_/, $items[0]);
  $t_count = scalar(@t_items);
  $cloneName=$t_items[0];
  for($i =1; $i < $t_count-1; ++$i)
  {
    $cloneName=$cloneName . "_". $t_items[$i];
  }
  my $strand=1;
  if($t_items[$t_count-1] < 0)
  {
    $strand = 2;
  }
  if(defined $clone_info_list{$cloneName})
  {
    if($clone_info_list{$cloneName}{strand} <3)
    {
      if($clone_info_list{$cloneName}{strand} != $strand)
      {
        $clone_info_list{$cloneName}{strand} += $strand;
      }
    }
  }
  else
  {
    $clone_info_list{$cloneName}{strand}=$strand;
    $clone_info_list{$cloneName}{line} = $line;
  }
}

close (FN);

my $total_clone=0;
my $total_unique_strand=0;
my $total_unique_count=0;
foreach $cloneName (keys %clone_info_list)
{
  if($clone_info_list{$cloneName}{strand} == 3)
  {
     ++$total_clone;
  }
  else
  {
    printf FO "%s\n", $clone_info_list{$cloneName}{line};
    ++$total_unique_count;
    if($total_unique_strand < 3 && $total_unique_strand != $clone_info_list{$cloneName}{strand})
    {
      $total_unique_strand += $clone_info_list{$cloneName}{strand};
    }
  }
}
close (FO);

printf FR "clone=%ld\tunique_count=%ld\tunique_strand=%ld\n", $total_clone, $total_unique_count, $total_unique_strand;

close (FR);

