#!/bin/sh

SAMPLE_LIST=$1
INPUT_CHR_LIST=$2
SOMATIC_OUTPUT_FILE=$3
GERMLINE_OUTPUT_FILE=$4
DIR4JZINDEL=$5
DIR4MEINDEL=$6
PATH4EXONS=$7

## PATH4EXONS=/tcga_next_gen/TCGA_WholeGenome/IndelAnalysis/CHR_REGION

## DIR4JZINDEL=/tcga_next_gen/TCGA_WholeGenome/IndelAnalysis
## DIR4MEINDEL=/tcga_next_gen/TCGA_WholeGenome/IndelAnalysis/IndelRescue

NEXTGEN_BIN_ROOT_DIR=/user/songliu/u2/group/Qiang/Exome/scripts/snp_postprocess/snv_postprocess
PERLSRC_DIR=${NEXTGEN_BIN_ROOT_DIR}/perlsrc
FIND_OVERLAP=${PERLSRC_DIR}/find_overlap_interval.pl

if test -s ${SOMATIC_OUTPUT_FILE}
then
  rm ${SOMATIC_OUTPUT_FILE}
fi

if test -s ${GERMLINE_OUTPUT_FILE}
then
  rm ${GERMLINE_OUTPUT_FILE}
fi

for i in `cat ${SAMPLE_LIST}`; do

  if test -s ${DIR4MEINDEL}/${i}_tumor_mod2.txt
  then
    cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt ${DIR4MEINDEL}/${i}_tumor_mod2.txt |grep -v Chr |cut -f1,2 |sort |uniq -d >d
  else
    cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt |grep -v Chr |cut -f1,2 |sort |uniq -d >d
  fi
  if test -s ${i}_indel.clean
  then
    rm ${i}_indel.clean
  fi
  if test -d
  then
    if test -s ${DIR4MEINDEL}/${i}_tumor_mod2.txt
    then
      cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt ${DIR4MEINDEL}/${i}_tumor_mod2.txt |grep -v Chr |fgrep -f d -v>${i}_indel.clean
    else
      cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt |grep -v Chr |fgrep -f d -v>${i}_indel.clean
    fi
    awk '{printf("%s|%s\n", $1, $2)}' d >d.lst
    for j in `cat d.lst`; do
      chr=`echo $j |cut -f1 -d"|"`
      pos=`echo $j |cut -f2 -d"|"`
      grep "$chr	$pos" ${DIR4JZINDEL}/${i}_tumor_mod2.txt |head -n1 >k
      if test -s k
      then
        cat k >>${i}_indel.clean
      else
        if test -s ${DIR4MEINDEL}/${i}_tumor_mod2.txt
        then
          grep "$chr	$pos" ${DIR4MEINDEL}/${i}_tumor_mod2.txt |head -n1 >k
          cat k >>${i}_indel.clean
        fi
      fi
    done
  else
    if test -s ${DIR4MEINDEL}/${i}_tumor_mod2.txt
    then
      cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt ${DIR4MEINDEL}/${i}_tumor_mod2.txt >${i}_indel.clean
    else
      cat ${DIR4JZINDEL}/${i}_tumor_mod2.txt >${i}_indel.clean
    fi
  fi
  if test -s ${i}_indel.clean
  then
    cp ${i}_indel.clean ${i}_indel_tumor.clean
  fi


  if test -s ${DIR4MEINDEL}/${i}_normal_mod2.txt
  then
    cat ${DIR4JZINDEL}/${i}_normal_mod2.txt ${DIR4MEINDEL}/${i}_normal_mod2.txt |grep -v Chr |cut -f1,2 |sort |uniq -d >d
  else
    cat ${DIR4JZINDEL}/${i}_normal_mod2.txt |grep -v Chr |cut -f1,2 |sort |uniq -d >d
  fi
  if test -s ${i}_indel.clean
  then
    rm ${i}_indel.clean
  fi
  if test -d
  then
    if test -s  ${DIR4MEINDEL}/${i}_normal_mod2.txt
    then
      cat ${DIR4JZINDEL}/${i}_normal_mod2.txt ${DIR4MEINDEL}/${i}_normal_mod2.txt |grep -v Chr |fgrep -f d -v>${i}_indel.clean
    else
      cat ${DIR4JZINDEL}/${i}_normal_mod2.txt |grep -v Chr |fgrep -f d -v>${i}_indel.clean
    fi
    awk '{printf("%s|%s\n", $1, $2)}' d >d.lst
    for j in `cat d.lst`; do
      chr=`echo $j |cut -f1 -d"|"`
      pos=`echo $j |cut -f2 -d"|"`
      grep "$chr	$pos" ${DIR4JZINDEL}/${i}_normal_mod2.txt |head -n1 >k
      if test -s k
      then
        cat k >>${i}_indel.clean
      else
        if test -s ${DIR4MEINDEL}/${i}_normal_mod2.txt
        then
          grep "$chr	$pos" ${DIR4MEINDEL}/${i}_normal_mod2.txt |head -n1 >k
          cat k >>${i}_indel.clean
        fi
      fi
    done
  else
    if test -s ${DIR4MEINDEL}/${i}_normal_mod2.txt
    then
      cat ${DIR4JZINDEL}/${i}_normal_mod2.txt ${DIR4MEINDEL}/${i}_normal_mod2.txt >${i}_indel.clean
    else
      cat ${DIR4JZINDEL}/${i}_normal_mod2.txt >${i}_indel.clean
    fi
  fi
  if test -s ${i}_indel.clean
  then
    mv ${i}_indel.clean ${i}_indel_normal.clean
  fi

  cut -f1,2 ${i}_indel_tumor.clean |sort -u >x
  cut -f1,2 ${i}_indel_normal.clean |sort -u >y
  cat x y |sort |uniq -d >d
  if test -s d
  then
    fgrep -f d -v ${i}_indel_tumor.clean >x
    mv x ${i}_indel_tumor.clean
  fi

  if test -s somatic_indel.out
  then
    rm somatic_indel.out
  fi
  if test -s ${i}_indel_tumor.clean
  then
    awk '{if($9 > 0 && $8 >0) print $0}' ${i}_indel_tumor.clean |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 >=10 || a2 >=10) && a3 <6) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' |awk '{if($2 == 0 || ($1/$2 >=10 && $2 < 10 && $8 >=10)) print $0}' >somatic_indel.out

## add low-frequency site with no repeat content to the picture
    awk '{if($9 > 0 && $8 >0) print $0}' ${i}_indel_tumor.clean |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 >=5 || a2 >=5) && a3 <3) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' |awk '{if($2 == 0 || ($1/$2 >=10 && $2 < 10 && $8 >=20)) print $0}' >>somatic_indel.out
    awk '{if(($9 ==0 || $8 == 0) && $6 >=3 && $7==0) {printf("%ld\t0\t0\t", $6); print $0}}' ${i}_indel_tumor.clean >>somatic_indel.out

    awk '{if($9 > 0 && $8 >0) print $0}' ${i}_indel_tumor.clean |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 <10 && a2 <10 && $6 >=3 && $7==0) && a3 <=4 && $3 >=2 && a1 >=1) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' |awk '{if($2 == 0 || ($1/$2 >=10 && $2 < 10 && $8 >=10)) print $0}' >>somatic_indel.out
    if test -s somatic_indel.out
    then
      sort -u somatic_indel.out >somatic_indel.out.sort
      mv somatic_indel.out.sort somatic_indel.out
    fi
  fi

  if test -s somatic_interval.lst
  then
    rm somatic_interval.lst
  fi

  if test -s somatic_indel.out
  then
    grep -v xxx somatic_indel.out |sed /^/s//${i}"	"/g >>${SOMATIC_OUTPUT_FILE}
    cut -f4,5 somatic_indel.out |sort -u >somatic_interval.lst
  else
    echo "No somatic indel for ${i}"
  fi

  if test -s k
  then
    rm k
  fi
  touch k

  if test -s somatic_interval.lst
  then
    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |fgrep -f somatic_interval.lst -v |awk '{if($9 > 0 && $8 >0) print $0}' |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 >=10 || a2 >=10) && a3 <6 && $6 >=3) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' >>k

    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |fgrep -f somatic_interval.lst -v |awk '{if($9 > 0 && $8 >0) print $0}' |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 <10 && a2 <10) && a3 <2 && $6 >=3) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' >>k

    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |fgrep -f somatic_interval.lst -v |awk '{if(($9 == 0 || $8 ==0) && $6 >=3){printf("%ld\t0\t0\t", $6); print $0}}' >>k
  else
    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |awk '{if($9 > 0 && $8 >0) print $0}' |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 >=10 || a2 >=10) && a3 <6 && $6 >=3) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' >>k

    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |awk '{if($9 > 0 && $8 >0) print $0}' |awk '{a1=$5*100/$8; a2=$7*100/$9; a3=$4/$3; if((a1 <10 && a2 <10) && a3 <2 && $6 >=3) {printf("%ld\t%ld\t%ld\t", a1, a2, a3); print $0}}' >>k

    cat ${i}_indel_tumor.clean ${i}_indel_normal.clean |awk '{if(($9 == 0 || $8 ==0) && $6 >=3){printf("%ld\t0\t0\t", $6); print $0}}' >>k
  fi
  if test -s k
  then
    sed /^/s//${i}"	"/g k >>${GERMLINE_OUTPUT_FILE}
  fi
done


if test ! -d ${PATH4EXONS}
then
  exit 1
fi

if test -s somatic_gene_interval.lst
then
  rm somatic_gene_interval.lst
fi

if test -s germline_gene_interval.lst
then
  rm germline_gene_interval.lst
fi

cp ${SOMATIC_OUTPUT_FILE} ${SOMATIC_OUTPUT_FILE}.original
for i in `cat ${INPUT_CHR_LIST}`; do
   echo $i
   if test -s ${SOMATIC_OUTPUT_FILE}
   then
##     echo  "awk '{if(\$5 == \"$i\") printf(\"%ld\t%ld\n\", \$6, \$6)}' ${SOMATIC_OUTPUT_FILE}" >awk.x
     echo  "awk '{if(\$5 == \"$i\") printf(\"%ld\t%ld\t%ld\n\", \$6, \$6-\$7+1, \$6+\$7-1)}' ${SOMATIC_OUTPUT_FILE}" >awk.x
     chmod ugo+x awk.x
     ./awk.x >k

     if test -s k
     then
      if test -d ${PATH4EXONS}
      then
        ${FIND_OVERLAP} -i k -d ${PATH4EXONS}/chr${i}_region.txt -o k2 -e err.log -m 1 -n 4 -q 1
      else
        cp k k2
      fi

      if test -s k2
      then
      ## awk '{printf("%s_%s\t%s\n", $6, $1, $3)}' k2 |sed /^chr/s///>>somatic_gene_interval.lst
      awk '{printf("%s_%s\t%s\n", $7, $1, $4)}' k2 |sed /^chr/s///>>somatic_gene_interval.lst
      fi
    fi
   fi

   if test -s ${GERMLINE_OUTPUT_FILE}
   then
     echo  "awk '{if(\$5 == \"$i\") printf(\"%ld\t%ld\t%ld\n\", \$6, \$6-\$7+1, \$6+\$7-1)}' ${GERMLINE_OUTPUT_FILE}" >awk.x
     chmod ugo+x awk.x
     ./awk.x >k
  
     if test -s k
     then
       if test -d ${PATH4EXONS}
       then
         ${FIND_OVERLAP} -i k -d ${PATH4EXONS}/chr${i}_region.txt -o k2 -e err.log -m 1 -n 4 -q 1
       else
         cp k k2
       fi
       if test -s k2
       then
         awk '{printf("%s_%s\t%s\n", $7, $1, $4)}' k2|sed /^chr/s/// >>germline_gene_interval.lst
       fi
    fi
  fi
done

if test -s somatic_gene_interval.lst
then
  sort -u  somatic_gene_interval.lst |sort +0 -1 >x
  awk '{printf("%s_%s\t", $5, $6); print $0}' ${SOMATIC_OUTPUT_FILE} |sort +0 -1 >y
  echo "Gene	Sample	Repeat	Chr	Pos	#Unique	#Indel	#Total	#IndelN	#TotalN" >z	
  join -1 1 -2 1 x y |awk '{printf("%s\t%s\t%s\t%s\t%s\t%s\t", $2, $3, $6, $7, $8, $12); printf("%ld\t%ld\t%ld\t%ld\t%s\n", $11, $14, $13, $15, $16)}' |sort +0 -1 >>z
  mv z ${SOMATIC_OUTPUT_FILE}
else
  echo "Gene	Sample	Repeat	Chr	Pos	#Unique	#Indel	#Total	#IndelN	#TotalN" >${SOMATIC_OUTPUT_FILE}
fi
    
if test -s germline_gene_interval.lst
then
  sort -u  germline_gene_interval.lst |sort +0 -1 >x
  awk '{printf("%s_%s\t", $5, $6); print $0}' ${GERMLINE_OUTPUT_FILE} |sort +0 -1 >y
  echo "Gene	Sample	Repeat	Chr	Pos	#Unique	#Indel	#Total	#IndelN	#TotalN" >z	
join -1 1 -2 1 x y |awk '{printf("%s\t%s\t%s\t%s\t%s\t%s\t", $2, $3, $6, $7, $8, $12); printf("%ld\t%ld\t%ld\t%ld\t%s\n", $11, $14, $13, $15, $16)}' |sort +0 -1 >>z
  mv z ${GERMLINE_OUTPUT_FILE}
else
  echo "Gene	Sample	Repeat	Chr	Pos	#Unique	#Indel	#Total	#IndelN	#TotalN" >${GERMLINE_OUTPUT_FILE}
fi 
