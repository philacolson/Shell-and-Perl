#!/bin/sh

##add the mutation type and annotation to the file somatic_indel_sum
INPUT_SUMMARY_SNP_FILE=$1   ## i.e. somatic_indel_sum.txt
INPUT_GENE_LIST_FILE=$2  ## e.g. all_gene.lst
DATE_FLAG=$3
OUTPUT_FILE=$4
DEBUG_LEVEL=$5
LOG=$6
## generate summary SNPs for snps and genotypes
if test ! -s ${INPUT_SUMMARY_SNP_FILE}
then
  echo "Fail to find somatic_xx_sum.txt file ${INPUT_SUMMARY_SNP_FILE} for summarize" >> $LOG
  exit 1
fi

if test ! -s ${INPUT_GENE_LIST_FILE}
then
  echo "Fail to find file ${INPUT_GENE_LIST_FILE} for summarize" >> $LOG
  exit 1
fi

NEXTGEN_BIN_ROOT_DIR=/user/songliu/u2/group/Qiang/Exome/scripts/snp_postprocess/snv_postprocess
SUMMARY_PROGRAM=${NEXTGEN_BIN_ROOT_DIR}/get_TSP_summary
SNP_INFO_SUM=all_snp_info_${DATE_FLAG}.txt
GENOTYPE_INFO_SUM=all_genotype_${DATE_FLAG}.txt

if test -s ${SNP_INFO_SUM}
then
  rm ${SNP_INFO_SUM}
fi

if test -s ${GENOTYPE_INFO_SUM}
then
  rm ${GENOTYPE_INFO_SUM}
fi

${SUMMARY_PROGRAM} ${DATE_FLAG} `pwd` ${INPUT_GENE_LIST_FILE}

if test ! -s ${SNP_INFO_SUM}
then
  if [ $DEBUG_LEVEL -gt 0 ]
    then
  echo "Fail to creat the snp summary file ${SNP_INFO_SUM} after ${SUMMARY_PROGRAM} ${DATE_FLAG} `pwd` ${INPUT_GENE_LIST_FILE}" >> $LOG
  fi
  exit 1
fi

if test ! -s ${GENOTYPE_INFO_SUM}
then
  if [ $DEBUG_LEVEL -gt 0 ]
    then
  echo "Fail to create the genotype summary file ${GENOTYPE_INFO_SUM} after ${SUMMARY_PROGRAM} ${DATE_FLAG} `pwd` ${INPUT_GENE_LIST_FILE}" >> $LOG
  fi
  exit 1

fi


## jon the SNP_INFO_SUM and GENOTYPE_INFO_SUM to generate the snp loc+classification info
grep -v SNP ${SNP_INFO_SUM}  |grep -v "^>" |sort +0 -1 >a1
grep -v SNP ${GENOTYPE_INFO_SUM} |grep -v "^>" |awk '{if(NF==8) print $0}' |sort +0 -1 >a2
join -1 1 -2 1 a1 a2 |awk '{printf("%s_%s\t%s\t%s\t%s\t%s\n", $2,$3, $5, $10, $11, $12)}' |sort +0 -1 >a3
## join -1 1 -2 1 a1 a2 |awk '{printf("%s_%s\t%s\t%s\n", $2,$3, $5, $10, $11, $12)}' |sort +0 -1 >a3

awk '{printf("%s_%s\t", $4, $5); print $0}' ${INPUT_SUMMARY_SNP_FILE} |sort +0 -1 >a4

if test -s ${OUTPUT_FILE}
then
  rm ${OUTPUT_FILE}
fi
echo "Gene  Sample	Repeat	Chr	Pos	Class	AAChange	ProteinGI	mRNA_acc	#Unique	#Indel	#Total	#IndelN	#TotalN	Flanking" >${OUTPUT_FILE}

join -1 1 -2 1 a3 a4 |awk '{printf("%s\t%s\t%s\t%s\t%s\t", $6, $7, $8, $9, $10); printf("%s\t%s\t%s\t%s\t", $2, $3, $4, $5); for(i=11; i<NF; ++i) printf("%s\t", $i); printf("%s\n", $NF)}' |sort -u>>${OUTPUT_FILE}

## rm a1 a2 a3 a4

